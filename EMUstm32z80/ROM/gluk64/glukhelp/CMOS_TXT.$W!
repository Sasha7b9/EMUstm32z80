  Ода часам (сокращено, дополнено и исправлено Alone Coder'ом)                       Схема прилагается.                     :-L не мешай, курю...Прошло много лет, и, по-моему, самое время кое о чем рассказать.Часы.Пришла в голову одному человеку (не мне) мысль подключить часы.Так бы она и погибла (мысль), да я ее поддержал. Этот же человеки презентовал мне для опытов саму м/с 512ви1, снабдиллитературой и смылся, вот засел я за ее описание и ужаснулся.Блин! А ведь умная штука!!!Сначала я ее хотел подключить как ay, благо система аналогичная- регистр адреса и регистр данных. Здесь меня постиг один облом- ни в одной книжке не сказано, что при втором режиме доступа (аесть еще и первый, но на синклере его реализовать будетзатруднительно), после установления адреса нельзя отключатьлинию СЕ, иначе она забудет, какой регистр вам нужен, и будетработать с регистром 0 (секунды), и при попытке работать свыбранным регистром получите рег-р секунд.Второй облом постиг меня в процессе эксплуатации, когда схемабыла запущена и отлажена, прошита ПЗУ, написан boot, установленрезидент в iS-DOSе. По невыясненной до сих пор причине иногда (уменя 3 раза) вылетает диод, который блокирует батарейку отразряда на +5 платы компа. При этом (повторюсь, у меня) всебатарейки уходят в нирвану, и в лучшем случае просто загибаются(в худшем - одна вытекла), жертв и разрушений нет.После того, как я вновь разорился на батарейки, я решил судьбувновь не испытывать, и отключил питание от платы компа, питаячасы всегда от батареек - учитывая ничтожный ток - их должнохватить на пару лет...На сегодняшний день часы эти существуют в единственномэкземпляре, и софта практически нет. НО! Есть Пзу, где ониисправно тикают, и по-моему, пока (заметьте, ПОКА) этогодостаточно.Переделке многих прог (главным образом системных) мешает...ничего не мешает, просто делать это некому.Не обязательно вешать чсы на im2, ибо теперь точность хода независит от частоты вызова программы - в ПЗУ часы вообщеразвязаны с прерываниями - как видно, работает ничем не хуже.Теперь об iS-DOSе. По-моему, вызывать часы каждое прерываниенет нужды. Обновление информации происходит раз в секунды, ипоэтому последняя версия резидента перепечатывает время толькотогда, когда сменяются секунды и всего один раз - выглядит этоточно также, но убиваются (да, и здесь убийство!) сразу nзайцев:1) разгружается прерывание, что для тормозного iS-DOSанемаловажно;2) вероятность сглюкивания clsа уменьшается в 50 разпоясню: при очистке экрана ldir'ом если придет прерывание вмомент переноса байта под часами, то весь экран будет заполненодним числом - выглядит противно. После переделки драйвераэффект практически не наблюдается (и на старуху бываетраздолбуха).Доступ к часам осуществляется посредством установки 7-го битапорта #EFF7, иначе в адресном пространстве портов компа часовнет.После установки вышеозначенного бита в 1 возможен доступ кпортам микросхемы: #BFF7 - регистр данных, #DFF7 - регистрадреса.В регистр адреса записывается адрес необходимох ячейки, врегистр данных записываются данные для записи в установленнуюячейку м/с, а также считываются данные из выбранной ячейки.Следует помнить, что после сброса 7-го бита #EFF7 м/с забудет,какой регистр вы установили, поэтому работу с часами рекомендуюпроводить по нижеприведенному алгоритму.Пример 1, он же последний.;запись в регистр;H - номер регистра, L - число для записи        LD BC,#EFF7        LD A,#80        OUT (C),A;включили доступ к м/с и устанавливаем рег-ры        LD BC,#DFF7        OUT (C),H; устанавливаем ячейку.        LD B,#BF        OUT (C),L; заносим значение в ячейку.;все выключаем        XOR A        LD BC,#EFF7        OUT (C),A        RETТеперь о том, что из себя представляет м/с.SMT> Точный аналог ВИ1 - это motorola MC146818, тем не менее,многие чипы заявлены совместимыми с ней.  ┌───────────┐      ┌─────────────────┐ 4┤AD0     VDD├24    │Микросхема  часов│ 5┤AD1    CKFS├20    │реального времени│ 6┤AD2      PS├22    │     146818      │ 7┤AD3    OSC1├2     └─────────────────┘ 8┤AD4  RESET#├18    AD0-AD7 - двунаправленная шина даных. 9┤AD5     VSS├12    AS - высоким уровнем выбирается регистр10┤AD6        │           адреса микросхемы.11┤AD7        │      DS - выбор регистра данных.14┤AS         │      R/W# - чтение либо запись данных15┤R/W#       │      CE# - сигнал выборки микросхемы.17┤DS         │      RESET# - сброс.13┤CE#        │  └───────────┘Для программера это устр-во имеет 64 ячейки памяти, часть изкоторых занята служебными регистрами.адрес #00 - секунды #01 - секунды будильника #02 - минуты #03 - минуты будильника #04 - часы #05 - часы будильника #06 - день неделиSMT> Журнал Радиоежегодник, 1989:"...Вашему вниманию предлагается описание микросхемы 512ВИ1,выпускаемой минским объединением "ИHТЕГРАЛ". Предназначено онодля тех, кто имеет некоторый опыт по работе с начинкой Speccyили аналогичных устройств. Так же оно будет полезнопрограммистам, решившим поддержать эту доработку Speccy. Этамикруха создана для работы в составе микропроцессорных систем вкачестве часов реального времени с будильником, календарем и ОЗУемкостью 50 байт. Подключив ВИ1 к своему Speccy, вы сможетевыводить на экран время и дату, упростится подсчет временныхинтервалов и т.п. 50 байт памяти достаточно, чтобы сохранитьтекущую конфигурацию машины[...]Дни недели кодируются так: 1-воскресенье, 2-понедельник и т. д.Если отключен автоперевод на летнее время, то используетсякодировка, при которой 1-это понедельник, а 7-воскресенье"Alone> С точки зрения Mr Gluk Reset Service при выключенном BCDвсе дни недели кодируются на единицу большими числами.SMT> Оригинальный чип назывался DS1285. Имеется огромноеколичество совместимых с ним, но более навороченных моделей:добавляют генераторы тона, память, серийный номер чипа,вставляют это схему в состав микроконтроллеров. но везде address06: day of week (1=sunday), valid range for binary andbinary-coded decimal 01-07. #07 - число #08 - месяц #09 - две последние цифры года #0A - служебный регистрбит 7 - обновление времени: 0=готов к чтению.биты 6-4 - делитель частоты,для 32,768 кГц - 010биты 3-0=0110 - выходная частота меандра 1024 Гц #0B - служебный регистрбит 7 - остановка часов: 0=нормальный ходбит 6 - разреш.периодических прерываний: 0=запрещенобит 5 - разреш.прерывания от будильника: 0=запрещенобит 4 - резреш.прерывания по оконч.смены времени: 0=запрещенобит 3 - разрешеие выходного меандра: 0=запрещенобит 2 - BCD/BIN формат: 0=BCDбит 1 - 12/24-часовой режим: 1=24-часовойбит 0 - зимнее/летнее время: 0=переключение запрещено #0C - статус-регистр: чтение флагов идентификаторов прерываниябит 7 - IRQF - общий запрос прерываниябит 6 - PF - периодические прерываниябит 5 - AF - прерывание от будильникабит 4 - UF - прерывание по смене временибиты 3-0 - зарезервированы #0D - статус-регистрбит 7 - питание: 1=норма, 0=разряд батареибиты 6-0 - зарезервированы #0E-#3F - озу пользователя.Озу пользователя мною частично использовано: #0E - режим запуска boot'ов (48/128/вся память) #0F - сейчас не использую (в ранних версиях был атрибут часов) #10 - номер дисковода #11 - байт #АА - контроль наличия м/с и необходимости выводачасов. Кнопка "9" в Глюке инвертирует этот байт #12 - флаг "user message", если = "G", то вместо стандартного"MR GLUK RESET SERVICE V5.1" будет выводится мессага из часов.Она начинается с адреса #13 и заканчивается байтом #ff, длинане более 27 байт, контрольные коды не допускаются (будут взятыиз пзу-шного знакогенератора и выведены).Alone> Real Commander 2.x плюёт на это с высокой колокольни:"Текущий дисковод активной панели сохраняется в #10 ячейку CMOS,конфигурация панелей и дисковод, выбранный на пассивной панели,сохраняются в ячейку #15".Spectre> QC и RC используют одинаковые ячейки. Порядок действий:1) Читаем из #16 позицию курсора в каталоге (позиция на единицубольше реальной, то есть 1..128).2) Проверяем на равенство 0, если ноль то выход, иначе уменьшаемна 1. Также еще проверяем, чтобы не больше 127 было.3) Читаем #15 ячейку с конфигурацией коммандера (RC или QC)4) По 5-му биту определяем чья инфа - RC или QC, берем из 0-2бит output дисковод.5) Читаем из #10 текущий дисковод, делаем and 3.RC 2.x конфиг:PK>>>>>>  Конфигурация панелей:PK>>>>>>  биты 0-2 дисковод пассивной панелиPK>>>>>>  бит 3 - вкл-на ли Basic маска на актив.панелиPK>>>>>>  бит 4 - ...   Basic маска на пассивной панелиPK>>>>>>  бит 5 - 0PK>>>>>>  бит 6 - какая панель активнаPK>>>>>>  бит 7 - информация вкл/выкл.PK>>>>>>  Эта переменная записывается в #15 ячейку CMOSQC v3.10 конфиг:0-2: output drive3: 1 - pack with LE, 0 - simple pack.4: 1 - fullcat off, 0 - fullcat on.5: 1 - QC config ID, 0 - RC config ID.6: 1 - play without loop, 0 - loop on.7: 1 - boot mode, 0 - commander mode.Alone> Ну что можно сказать? Больничный выписывать надо ;)Теперь подробнее. Строго говоря, пример 1 несколько не точен.Им можно пользоватся только для байтов #0A-#3F, а для служебныхбайтов часов процесс доступа к м/с нескольно иной.Дело в том, что операция чтения/записи может прийтись на моментобновления информации в часах, а это происходит каждую секунду,что чревато боком.Для обхода подобной ситуации есть спец. бит в одном из служебныхрегистров, который предугадывает процесс обновления.Если бит = ок, то некоторое время (нормируется, да я забыл) м/сгарантированно не будет обновлятся. Из практики выяснилось, чтоэтого времени достаточно для считывания/записи любой ячейки.В Глюке, если происходит обновление в часах, то циклпропускается, визуально этого не заметно (часы выводятся чаще,чем 1 раз в секунду, хотя в iS-DOSе с этим покончено).Итак, после всего вышеизложенного стало ясно, что послесобирания схемы просто так в Глюке часы не пойдут. Что нужно длятого, чтобы они пошли:Занести в #11 байт #AA, в #0A - %00100000, в #0B - %00000010, врегистры часов, минут и секунд - время, дату тоже желательно.М/с сама считает, сколько дней в месяце, високосные годы тожеучитываются, можно автоматически в определенные дни сделать так,что произойдет перевод с летнего времени на зимнее, да я это неиспользовал (только перевод не сделал, а остальное все само.Также будильник я не пробовал - знаю, что он включается 5-мбитом #0B, а сам не использовал). Если, однако, возникнетжелание его использовать, то над днем недели выводится символчасиков, если будильник включен - а вдруг кому надо? - так я ужесделал.По схеме.DD1 - 555ЛЕ1, DD2 - 555ЛЛ1, в качестве DD3 лучше использовать555ТМ8, но можно и ТМ2, однако, ТМ8 имеет 4 бита, а ТМ2 - толькодва. Если вас интересуют дальнейшие доработки по megascreenпорту, то ставьте ТМ8.Точность хода можно регулировать, для этого нужно вместо одногоиз конденсаторов поставить подстроечник.Засим кланяюсь, если что не ясно - разьясню.20.02.98 Мистер Глюк,великий и ужасный.P.SПолучил я тут отзыв и возрадовался - а то местные юзеры всекритиканствуют (причем беспочвенно - просто у самих рукикоротки).Теперь по поводу дальнейших версий. Оно будет еще круче (еслиеще будет, т.к. я погружен в другие проблемы и времени совсемнет - загружен (-аюсь) сильно на основной работе); предполагаюприменить иконныю технологию и еще кое - что интересное. Однако,за все время работы (около 1 года версии менялись каждые 2месяца) я не заработал ни копейки. Отчетливо понимаю, что наспеке денег сделать иначе чем ремонтом низя, у меня особогорвения к работе нет, и поэтому оно, видимо, угасло forever.Теперь о недостатках.Их там нет! Ибо все что вы видели, я делал ТОЛЬКО ДЛЯ СЕБЯ, иможет, совсем чуть-чуть для остальных. На моей машине оно круто,и курсор маленький мне нравится очень, хотя, возможно и укрупню(в другой версии). С курсором получилось вынужденно: когда онописалось, то я предполагал, что свободного места будет мало, ипоэтому курсор кладется по OR и такой мелкий; хотя, по - моему итак круто.Пусть тот, кому оно не нравится, помолчит - я никого ни к чемуне обязываю, не нравится - не ешь.О курсоре сказал, теперь о шрифте.Фонт использован Пзушный, извращается в процессе печати. Сделаноиз экономии места, которого, как оказалось, осталось достаточно.В дальнейшем буду более точно планировать размеры. Местноенаселение шрифт одобрило, кому не нравится - может не зашивать.На мониторе 32ВТЦ оно смотрится неплохо. Во всяком случае,элемент оригинальности присутствует.О коммандере. PC крут, и кто с этим спорит - пусть идет в армию.FPM и даже рядом не стоит по возможностям с PC (sorry 2 MaxPetrov), и вставлять его только из-за мыши я не стану (длясебя). Была неудачная попытка написать свой крутой коммандер, даничего не вышло - организационные трудности.О фоновой картинке ваще не распространяюсь: не нравилось - несделал бы.Теперь когда всем раздал, хочу предупредить - всякое изменениебуду воспринимать как личное оскорбление, и как признаниекротости рук исправителя. Ломать - не делать, XAS не нужен.Однако, посля всего вышеизложенного, буду рад (!?) подобнойкритике. Не сомневайтесь, выводы будут сделаны.Приведенной информации по часам явно недостаточно для работы сними, при желании могу презентовать исходники в Xas'eустановщика времени и всего остального - может, кто сделаетполноценную прогу, а то надоело Xas грузить, когда надо времяподправить или текст поменять.Также по запросу презентую драйвер часов для is-dos'a; прогу вis-dos'е, которая устанавливает в систему текуую дату;устанавливатель is-dos' резидентом в верхней памяти.Кому нужен мой boot - резидент с часами - ради бога, но он ещесыроват, дисковые ошибки в последней версии не любит (болееранние версии любили).last edited 22.02.98 [прим. Alone Coder'а: Gluk5.3 вышел болеечем через год, поэтому часть статьи, относящаяся к рамдиску, несоответствует действительности, и я её удалил; к сожалению,автор теперь недоступен... 09.03.05]